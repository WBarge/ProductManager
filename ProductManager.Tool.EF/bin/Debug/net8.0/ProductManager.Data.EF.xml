<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProductManager.Data.EF</name>
    </assembly>
    <members>
        <member name="T:ProductManager.Data.EF.Configuration.ProductCharacteristicConfig">
            <summary>
            Class ProductCharacteristicConfig.
            configures the product characteristic 
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.IEntityTypeConfiguration`1" />
        </member>
        <member name="M:ProductManager.Data.EF.Configuration.ProductCharacteristicConfig.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{ProductManager.Data.EF.Model.ProductCharacteristic})">
            <summary>
            Configures the ProductCharacteristic entity
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:ProductManager.Data.EF.Configuration.ProductConfig">
            <summary>
            Class ProductConfig.
            configures the product
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.IEntityTypeConfiguration`1" />
        </member>
        <member name="M:ProductManager.Data.EF.Configuration.ProductConfig.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{ProductManager.Data.EF.Model.Product})">
            <summary>
            Configures the product entity 
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:ProductManager.Data.EF.Configuration.ProductOptionConfig">
            <summary>
            Class ProductOptionConfig.
            configure the product options
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.IEntityTypeConfiguration`1" />
        </member>
        <member name="M:ProductManager.Data.EF.Configuration.ProductOptionConfig.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{ProductManager.Data.EF.Model.ProductOption})">
            <summary>
            Configures the ProductOption entity
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:ProductManager.Data.EF.Configuration.ProductSellConfig">
            <summary>
            Class ProductSellConfig.
            configures the product sells
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.IEntityTypeConfiguration`1" />
        </member>
        <member name="M:ProductManager.Data.EF.Configuration.ProductSellConfig.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{ProductManager.Data.EF.Model.ProductSell})">
            <summary>
            Configures the ProductSell entity 
            </summary>
            <param name="builder">The builder to be used to configure the entity type.</param>
        </member>
        <member name="T:ProductManager.Data.EF.DBSchemaHelp.DbSchemaExtension">
            <summary>
            Class DBSchemaExtension.
            </summary>
        </member>
        <member name="M:ProductManager.Data.EF.DBSchemaHelp.DbSchemaExtension.HandleDbSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Handles the database schema creation and migrations.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="T:ProductManager.Data.EF.Model.Product">
            <summary>
            Class Product.
            Represents a product
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Id">
            <summary>
            Gets or sets the identifier.
            primary identifier for the record
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product._name">
            <summary>
            The name backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product.NAME_MAX_SIZE">
            <summary>
            The name maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Name">
            <summary>
            Gets or sets the name.
            the name of the product
            Is limited to 128 characters - will be silently truncated if longer
            </summary>
            <value>The name.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product._shortDescription">
            <summary>
            The short description backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product.SHORT_DESCRIPTION_MAX_SIZE">
            <summary>
            The short description maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.ShortDescription">
            <summary>
            Gets or sets the short description.
            A short description for the product
            Is limited to 256 characters - will be silently truncated if longer
            </summary>
            <value>The short description.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product._sku">
            <summary>
            The sku
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.Product.SKU_MAX_SIZE">
            <summary>
            The sku maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Sku">
            <summary>
            Gets or sets the sku.
            Is limited to 12 characters - will be silently truncated if longer
            </summary>
            <value>The sku.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Description">
            <summary>
            Gets or sets the description.
            The full description of the product.
            Is optional
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Price">
            <summary>
            Gets or sets the price.
            How much the product costs.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ProductManager.Data.EF.Model.Product" /> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Created">
            <summary>
            Gets or sets the created.
            represents when the record was created
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Modified">
            <summary>
            Gets or sets the modified.
            represents when the record was last changed
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Options">
            <summary>
            Gets or sets the options.
            represents the options available for the product
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Characteristics">
            <summary>
            Gets or sets the characteristics.
            represents the characteristics of the product
            </summary>
            <value>The characteristics.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.Product.Reductions">
            <summary>
            Gets or sets the reductions.
            Represents time periods in which a product is on sale
            </summary>
            <value>The reductions.</value>
        </member>
        <member name="T:ProductManager.Data.EF.Model.ProductCharacteristic">
            <summary>
            Class ProductCharacteristic.
            Could also be called part of a spec
            e.g.    color red
            Ram 16G
            Length 16"
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Id">
            <summary>
            Gets or sets the identifier.
            primary identifier for the record
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>The product identifier.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductCharacteristic._name">
            <summary>
            The name backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductCharacteristic.NAME_MAX_SIZE">
            <summary>
            The name maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Name">
            <summary>
            Gets or sets the name.
            the name of the characteristic
            Is limited to 128 characters - will be silently truncated if longer
            </summary>
            <value>The name.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductCharacteristic._charValue">
            <summary>
            The character value backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductCharacteristic.CHARACTERISTIC_VALUE_MAX_SIZE">
            <summary>
            The characteristic value maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.CharacteristicValue">
            <summary>
            Gets or sets the characteristic value.
            Is limited to 128 characters - will be silently truncated if longer
            </summary>
            <value>The characteristic value.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ProductManager.Data.EF.Model.ProductCharacteristic" /> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Created">
            <summary>
            Gets or sets the created.
            represents when the record was created
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Modified">
            <summary>
            Gets or sets the modified.
            represents when the record was last changed
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductCharacteristic.Product">
            <summary>
            Gets or sets the product.
            The product the characteristic is for
            </summary>
            <value>The product.</value>
        </member>
        <member name="T:ProductManager.Data.EF.Model.ProductOption">
            <summary>
            Class ProductOption.
            Represents an option for a product - can cost extra
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Id">
            <summary>
            Gets or sets the identifier.
            primary identifier for the record
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>The product identifier.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductOption._name">
            <summary>
            The name backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductOption.NAME_MAX_SIZE">
            <summary>
            The name maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Name">
            <summary>
            Gets or sets the name.
            the name of the product
            Is limited to 128 characters - will be silently truncated if longer
            </summary>
            <value>The name.</value>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductOption._shortDescription">
            <summary>
            The short description backing field
            </summary>
        </member>
        <member name="F:ProductManager.Data.EF.Model.ProductOption.SHORT_DESCRIPTION_MAX_SIZE">
            <summary>
            The short description maximum size
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.ShortDescription">
            <summary>
            Gets or sets the short description.
            A short description for the product
            Is limited to 256 characters - will be silently truncated if longer
            </summary>
            <value>The short description.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Description">
            <summary>
            Gets or sets the description.
            The full description of the product.
            Is optional
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Price">
            <summary>
            Gets or sets the price.
            How much the product costs.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ProductManager.Data.EF.Model.ProductOption" /> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Created">
            <summary>
            Gets or sets the created.
            represents when the record was created
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Modified">
            <summary>
            Gets or sets the modified.
            represents when the record was last changed
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductOption.Product">
            <summary>
            Gets or sets the product.
            The product the option is for
            </summary>
            <value>The product.</value>
        </member>
        <member name="T:ProductManager.Data.EF.Model.ProductSell">
            <summary>
            Class ProductSell.
            represent a date range a product is on sell
            </summary>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Id">
            <summary>
            Gets or sets the identifier.
            primary identifier for the record
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.ProductId">
            <summary>
            Gets or sets the product identifier.
            </summary>
            <value>The product identifier.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Start">
            <summary>
            Gets or sets the start date of the sell.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.End">
            <summary>
            Gets or sets the end date of the sell.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Period">
            <summary>
            Gets or sets the time period.
            represents the time period the sell is valid aka going on
            </summary>
            <value>The period.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Price">
            <summary>
            Gets or sets the price for the date range.
            </summary>
            <value>The price.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ProductManager.Data.EF.Model.ProductSell" /> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Created">
            <summary>
            Gets or sets the created.
            represents when the record was created
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Modified">
            <summary>
            Gets or sets the modified.
            represents when the record was last changed
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ProductManager.Data.EF.Model.ProductSell.Product">
            <summary>
            Gets or sets the product.
            The product the sell is for
            </summary>
            <value>The product.</value>
        </member>
        <member name="T:ProductManager.Data.EF.ProductDbContext">
            <summary>
            Class ProductDbContext.
            Implements the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:ProductManager.Data.EF.ProductDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{ProductManager.Data.EF.ProductDbContext})">
            <summary>
            Initializes a new instance of the <see cref="T:ProductManager.Data.EF.ProductDbContext" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:ProductManager.Data.EF.ProductDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override this method to further configure the model that was discovered by convention from the entity types
            exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached
            and re-used for subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context. Databases (and other extensions) typically
            define extension methods on this object that allow you to configure aspects of the model that are specific
            to a given database.</param>
            <remarks><para>
            If a model is explicitly set on the options for this context (via <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />)
            then this method will not be run. However, it will still run when creating a compiled model.
            </para>
            <para>
            See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and
            examples.
            </para></remarks>
        </member>
        <member name="P:ProductManager.Data.EF.ProductDbContext.Products">
            <summary>
            Gets or sets the products.
            </summary>
            <value>The products.</value>
        </member>
        <member name="P:ProductManager.Data.EF.ProductDbContext.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:ProductManager.Data.EF.ProductDbContext.Characteristics">
            <summary>
            Gets or sets the characteristics.
            </summary>
            <value>The characteristics.</value>
        </member>
        <member name="P:ProductManager.Data.EF.ProductDbContext.Sells">
            <summary>
            Gets or sets the sells.
            </summary>
            <value>The sells.</value>
        </member>
        <member name="T:ProductManager.Data.EF.Repos.BaseEfRepo`1">
            <summary>
            Class BaseEfRepo.
            To be used when the repo represents the table in the db
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ProductManager.Data.EF.Repos.BaseEfRepo`1.DbContext">
            <summary>
            Gets the database context.
            </summary>
            <value>The database context.</value>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.#ctor(ProductManager.Data.EF.ProductDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ProductManager.Data.EF.Repos.BaseEfRepo`1" /> class.
            </summary>
            <param name="dbContext">The database context.</param>
            <exception cref="T:System.ArgumentNullException">dbContext</exception>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.GetAllRecordsAsync(System.Threading.CancellationToken)">
            <summary>
            get all records as an asynchronous operation.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.GetAllRecordsPagedAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            get all records paged as an asynchronous operation.
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.FindByConditionAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            find by condition as an asynchronous operation.
            </summary>
            <param name="expression">The expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>List&lt;T&gt;.</returns>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.Create">
            <summary>
            Creates this instance.
            </summary>
            <returns>T.</returns>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.InsertAsync(`0)">
            <summary>
            insert as an asynchronous operation.
            </summary>
            <param name="entity">The entity.</param>
            <returns>A Task representing the asynchronous operation.</returns>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:ProductManager.Data.EF.Repos.BaseEfRepo`1.SaveAsync(System.Threading.CancellationToken)">
            <summary>
            save as an asynchronous operation.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
